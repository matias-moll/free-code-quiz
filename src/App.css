/* Variables*/
:root {
  --box-shadow-standard: 0 5px 10px rgba(0,0,0,0.10), 0 3px 3px rgba(0,0,0,0.15);
  --background-color-for-text: rgba(47, 47, 47, 0.4);
  --correct-answer-color: #6dfcb7;
  --incorrect-answer-color: #fc806d;
  --primary-color: #d9b064;
  --primary-darker-color: #b5852d;
  font-size: 20px;
}

.page-title{
  border-bottom: solid 2px var(--primary-color);
}

.primary-color{
  color: var(--primary-color);
}

p a{
  color: var(--primary-color);
}

p a:hover{
  color:var(--primary-darker-color);
}

/* Topbar*/
#topbar .navbar{
  padding: 0.5rem 20%;
}

.navbar-nav .nav-link {
  margin: auto 1rem;
}

#navbarNav{
  color: white;
  font-weight: 600;
  border-radius:10px;
}

/* Main Container */
.app{
  background-color:#1E1E1E;
  height:100vh;
  width:100%;
  overflow: scroll;
}

main{
  width:60%;
  margin:auto;
  display:grid;
  grid-auto-rows: max-content;
  color:white;
}

/* Lywo */

#lywo-message{
  margin-top:0.8rem;
  background-color: var(--background-color-for-text);
  padding: 0.5rem 1.5rem;
  border-radius: 25px;
  font-size:medium;
}

#lywo-message-container{
  width:30%;
}
 
#lywo-tiny{
  display:none;
}


/* Questions */

.question-card{
  padding: 1rem 1.5rem;
  border:1px solid var(--primary-color);
  font-size:large;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 1);
  background-color: var(--background-color-for-text);
  margin: 0.75rem 0;
}

.question-card h3{
  margin-bottom: 0.5rem;
}

.answer-options{
  display: grid;
  grid-gap: 2.5rem 0.5rem;
  grid-template-columns: 1fr 1fr;
  text-align:center;
  padding: 1rem;
}

.answer-option:hover:not(.answered){
  cursor:pointer;
  background-color: #c4c4c4;
  border-color:black;
}

.answer-option {
  border: 1px solid;
  cursor: pointer;
  padding: 0.8rem;
  font-size: larger;
  border-radius: 1rem;
  border: 2px #c4c4c4 solid;
  color:black;
  font-weight: 700;
  background-color:#E6E6E6;
  width: 450px;
  margin: auto;
  transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out;
}

.answered{
  cursor: default;
}

.correct-answer{
  background-color: var(--correct-answer-color);
  border-color:var(--correct-answer-color);
}

.incorrect-answer{
  background-color: var(--incorrect-answer-color);
  border-color:var(--incorrect-answer-color);
}

.correct-result-text{
  color:var(--correct-answer-color);
}
.incorrect-result-text{
  color:var(--incorrect-answer-color);
}


#btn-next-question{
  border-radius:25px;
  margin-left:auto;
  float:right;
  padding: 0.5rem;
  font-size: 1rem;
}

#result-next-container{
  display:flex;
  align-items:center;
  margin: 1rem 0 1.25rem 0;
}

.result-answer-text{
  margin-bottom: 0.2rem;
}

/* About */
#lywo-about{
  width:200px;
  height:200px;
}

/* Contribute */
#form-contribute{
  background-color: rgba(38, 152, 249, 0.3);
  /* background-color: rgba(48, 64, 81, 0.8); */
  border-radius: 5%;
  padding: 1rem 1.5rem;
  margin: 1rem 0;
}

#question-input{
  margin: 1rem auto 2.5rem;
}
.input-pair{
  display:flex;
  flex-direction:column;
  margin-bottom:0.6rem;
}
.input-pair input[type=number]{
  max-width:150px;
}

.input-section{
  margin-top: 1.5rem;
}

#btn-collaborate{
  margin-top:1rem;
  margin-bottom: 0.5rem;
  font-weight: 700;
  font-size: large;
  width:250px;
}
.btn-primary{
  background-color: #b5852d;
  border-color:#836121;
  font-weight: 600;
}
.btn-primary:hover{
  background-color: #a37622;
  border-color:#88621b;
}

.btn-github>a{
  color: white;
}

#side-info{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}
#btn-github-side{
  padding: 0.35rem 0.5rem;
  font-size: 0.8rem;
  height: 80%;
}

#btn-github-header{
  display:none;
}
.visible-only-small{
  display:none;
}


/* Media Queries */

@media (max-width:1510px){
  .answer-options{
    grid-gap: 1rem;
    grid-template-columns: 1fr;
    padding: 0.5rem;
  }
  .answer-option{
    padding: 0.5rem;
    font-size: 1rem;
  }

  #lywo-message-container {
    width: 50%;
  }

  #topbar .navbar{
    padding: 0.5rem 15%;
  }
  main{
    width:70%;
  }

}

/* Mid size desktop */
@media (max-width:1250px){
  #topbar .navbar{
    padding: 0.5rem 10%;
  }
  main{
    width:80%;
  }

  #side-info{
    display: none;
  }
  .grid-main-side{
    grid-template-columns: 1fr !important;
  }
  #btn-github-header{
    display:inline;
  }
  
}

@media (max-width:990px){
  #navbarNav{
    background-color: var(--background-color-for-text);
  }
  
  .hidden-small{
    display:none;
  }

  #topbar .navbar{
    padding: 0.5rem 5%;
  }

  main{
    width:90%;
  }

}

/* Large Mobile + Lowest on desktop */
@media (max-width:600px){
  #lywo-image{
    display: none;
  }

  .visible-only-small{
    display:inline !important;
  }
  .grid-responsive-columns{
    grid-template-columns: 1fr !important;
  }

  #lywo-tiny{
    display:inline;
  }

  p{
    font-size: medium !important;
  }

  h4{
    font-size: 1.3rem !important;
  }

  .question-card{
    padding: 0.5rem 0.75rem;
  }

  #question-input{
    margin: 1rem auto;
  }

  #btn-next-question{
    padding: 0.3rem;
    font-size: 0.9rem;
  }

  #lywo-message-container {
    width: 80%;
  }

  .answer-options{
    grid-gap: 0.5rem;
    grid-template-columns: 1fr;
    padding: 0.2rem;
  }
  .answer-option{
    width: 90%;
  }

  .small-100{
    width:100% !important;
  }

  #grid-inputs-contribute{
    grid-template-columns: 1fr;
    grid-gap: 0;
  }
  #form-contribute{
    border-radius: 0;
    padding: 0.5rem 0.75rem;
  }
  
  .hidden-extrasmall{
    display:none;
  }

  #lywo-about{
    width:150px !important;
    height:150px !important;
  }
  
} 

/* Small Mobile */
@media (max-width:450px){
  .answer-option {
    font-size:0.8rem;
    padding: 0.2rem;
  }
}


/* Animations */


/* Use with slide in animations */
.come-from-left{
  transform: translateX(-30%);
  opacity: 0;
  will-change: transform;
}

.come-from-right{
  transform: translateX(20%);
  opacity: 0;
  will-change: transform;
}

.transparent{
  opacity:0;
}

.slide-in {
  animation: slide-in 1.5s forwards;
  animation-timing-function: ease-in-out;
}

.slide-in-delayed {
  animation: slide-in 2s forwards 1s;
  animation-timing-function: ease-in-out;
}

.appear-slow{
  animation: appear 2s forwards;
}

.appear{
  animation: appear 1s forwards;
}

.appear-fast{
  animation: appear 0.5s forwards;
}

@keyframes slide-in {
  100% { transform: translateX(0%); opacity: 1;}
}

@keyframes appear {
  100% { opacity: 1}
}

